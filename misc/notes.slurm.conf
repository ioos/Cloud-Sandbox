       SlurmctldParameters
              Multiple options may be comma separated.

              cloud_dns
                     By default, Slurm expects that the network address for a cloud node won't  be  known  until
                     the  creation of the node and that Slurm will be notified of the node's address (e.g. scon‐
                     trol update nodename=<name> nodeaddr=<addr>).  Since Slurm communications rely on the  node
                     configuration  found  in  the slurm.conf, Slurm will tell the client command, after waiting
                     for all nodes to boot, each node's ip address. However, in environments where the nodes are
                     in DNS, this step can be avoided by configuring this option.

              cloud_reg_addrs
                     When  a  cloud  node  registers, the node's NodeAddr and NodeHostName will automatically be
                     set. They will be reset back to the nodename after powering off.

NODE CONFIGURATION
       The  configuration  of  nodes  (or machines) to be managed by Slurm is also specified in /etc/slurm.conf.
       Changes in node configuration (e.g. adding nodes, changing their processor count, etc.) require  restart‐
       ing both the slurmctld daemon and the slurmd daemons.  All slurmd daemons must know each node in the sys‐
       tem to forward messages in support of hierarchical communications.  Only the NodeName must be supplied in
       the configuration file.  All other node configuration information is optional.  It is advisable to estab‐
       lish baseline node configurations, especially if the cluster is heterogeneous.  Nodes which  register  to
       the system with less than the configured resources (e.g. too little memory), will be placed in the "DOWN"
       state to avoid scheduling jobs on them.  Establishing baseline configurations  will  also  speed  Slurm's
       scheduling process by permitting it to compare job requirements against these (relatively few) configura‐
       tion parameters and possibly avoid having to check job requirements against every individual node's  con‐
       figuration.  The resources checked at node registration time are: CPUs, RealMemory and TmpDisk.

       Default  values  can be specified with a record in which NodeName is "DEFAULT".  The default entry values
       will apply only to lines following it in the configuration file and the default values can be reset  mul‐
       tiple  times  in  the configuration file with multiple entries where "NodeName=DEFAULT".  Each line where
       NodeName is "DEFAULT" will replace or add to previous default values and not a reinitialize  the  default
       values.   The  "NodeName="  specification  must  be  placed on every line describing the configuration of
       nodes.  A single node name can not appear as a NodeName value in more than one line (duplicate node  name
       records  will  be ignored).  In fact, it is generally possible and desirable to define the configurations
       of all nodes in only a few lines.  This convention permits significant optimization in the scheduling  of
       larger  clusters.   In order to support the concept of jobs requiring consecutive nodes on some architec‐
       tures, node specifications should be place in this file in consecutive order.  No single node name may be
       listed more than once in the configuration file.  Use "DownNodes=" to record the state of nodes which are
       temporarily in a DOWN, DRAIN or FAILING state without altering permanent  configuration  information.   A
       job  step's  tasks  are  allocated to nodes in order the nodes appear in the configuration file. There is
       presently no capability within Slurm to arbitrarily order a job step's tasks.

       Multiple node names may be comma separated (e.g. "alpha,beta,gamma") and/or a simple node  range  expres‐
       sion  may  optionally  be  used to specify numeric ranges of nodes to avoid building a configuration file
       with large numbers of entries.  The node range expression can contain one  pair of square brackets with a
       sequence  of comma-separated numbers and/or ranges of numbers separated by a "-" (e.g. "linux[0-64,128]",
       or "lx[15,18,32-33]").  Note that the numeric ranges can include one or more leading  zeros  to  indicate
       the  numeric portion has a fixed number of digits (e.g. "linux[0000-1023]").  Multiple numeric ranges can
       be included in the expression (e.g. "rack[0-63]_blade[0-41]").  If one or more  numeric  expressions  are
       included,  one  of  them must be at the end of the name (e.g. "unit[0-31]rack" is invalid), but arbitrary
       names can always be used in a comma-separated list.

       The node configuration specified the following information:

       NodeName
              Name that Slurm uses to refer to a node.  Typically this would be the string  that  "/bin/hostname
              -s"  returns.   It  may  also be the fully qualified domain name as returned by "/bin/hostname -f"
              (e.g. "foo1.bar.com"), or any valid domain name associated with the host through the host database
              (/etc/hosts) or DNS, depending on the resolver settings.  Note that if the short form of the host‐
              name is not used, it may prevent use of hostlist expressions (the numeric portion in brackets must
              be  at  the  end of the string).  It may also be an arbitrary string if NodeHostname is specified.
              If the NodeName is "DEFAULT", the values specified with that record will apply to subsequent  node
              specifications  unless  explicitly set to other values in that node record or replaced with a dif‐
              ferent set of default values.  Each line where NodeName is "DEFAULT" will replace or add to previ‐
              ous default values and not a reinitialize the default values.  For architectures in which the node
              order is significant, nodes will be considered consecutive in the order defined.  For example,  if
              the  configuration  for  "NodeName=charlie"  immediately  follows  the  configuration  for  "Node‐
              Name=baker" they will be considered adjacent in the computer.


       NodeHostname
              Typically this would be the string that "/bin/hostname -s" returns.  It  may  also  be  the  fully
              qualified domain name as returned by "/bin/hostname -f" (e.g. "foo1.bar.com"), or any valid domain
              name associated with the host through the host database (/etc/hosts)  or  DNS,  depending  on  the
              resolver settings.  Note that if the short form of the hostname is not used, it may prevent use of
              hostlist expressions (the numeric portion in brackets must be at the end of the string).   A  node
              range  expression  can be used to specify a set of nodes.  If an expression is used, the number of
              nodes identified by NodeHostname on a line in the configuration file must be identical to the num‐
              ber  of  nodes identified by NodeName.  By default, the NodeHostname will be identical in value to
              NodeName.


       NodeAddr
              Name that a node should be referred to in establishing a communications path.  This name  will  be
              used  as an argument to the getaddrinfo() function for identification.  If a node range expression
              is used to designate multiple nodes, they must exactly match the entries  in  the  NodeName  (e.g.
              "NodeName=lx[0-7]  NodeAddr=elx[0-7]").   NodeAddr may also contain IP addresses.  By default, the
              NodeAddr will be identical in value to NodeHostname.



       CPUs   Number  of  logical processors on the node (e.g. "2").  CPUs and Boards are mutually exclusive. It
              can be set to the total number of sockets(supported only  by  select/linear),  cores  or  threads.
              This  can  be useful when you want to schedule only the cores on a hyper-threaded node. If CPUs is
              omitted, its default will be set equal to the product  of  Boards,  Sockets,  CoresPerSocket,  and
              ThreadsPerCore.

