###AWS NOS/IOOS Cloud Sandbox (Intel/AMD no avx512)

set (SCHISM_EXE_BASENAME pschism_IOOSSB CACHE STRING "Base name (modules and file extension to be added of the executable. If you want a machine name, add it here")

###Relative paths won't work
# set(CMAKE_Fortran_COMPILER mpiifort CACHE PATH "Path to serial Fortran compiler")
# Probably should use ifort, not sure why I switched it to mpiifort 
set(CMAKE_Fortran_COMPILER ifort CACHE PATH "Path to serial Fortran compiler")
set(NetCDF_FORTRAN_DIR "$ENV{NETCDF}" CACHE PATH "Path to NetCDF Fortran library")
set(NetCDF_C_DIR  "$ENV{NETCDFC}"  CACHE PATH "Path to NetCDF C library")
set(CMAKE_C_COMPILER icc CACHE STRING "Path to serial C compiler")
set(CMAKE_CXX_COMPILER icc CACHE STRING "Path to serial C++ compiler")
#set(C_PREPROCESS_FLAG "-no-cpp" CACHE STRING "cpp is automatic with intel compiler")
set(CMAKE_WARN_DEV OFF CACHE BOOLEAN "Disable warning messages")

###Compile flags

#For Hybrid (remember to add OMP in the name above)
# add -qopenmp

# set(CMAKE_Fortran_FLAGS_RELEASE "-march=core-avx2 -mcmodel=medium -O2 -init=zero -no-prec-sqrt -no-prec-div -align all -assume buffered_io -assume byterecl" CACHE STRING "Fortran flags" FORCE)
#
# I did not specify march for eccofs nor necofs and they ran on both hpc7a and hpc6a without issue
#
# set(CMAKE_Fortran_FLAGS_RELEASE "-march=core-avx2 -mcmodel=medium -O2 -init=zero -no-prec-sqrt -no-prec-div -align all -assume buffered_io -assume byterecl" CACHE STRING "Fortran flags" FORCE)

set(CMAKE_Fortran_FLAGS_RELEASE "-march=core-avx2 -O3 -g -traceback -no-prec-sqrt -no-prec-div -align all -assume buffered_io -assume byterecl" CACHE STRING "Fortran flags" FORCE)

# no noticeable performance improvement using skylake-avx512 build
# set(CMAKE_Fortran_FLAGS_RELEASE "-march=skylake-avx512 -O3 -g -traceback -no-prec-sqrt -no-prec-div -align all -assume buffered_io -assume byterecl" CACHE STRING "Fortran flags" FORCE)

# Note: hp7a support avx-512, hpc6a does not
